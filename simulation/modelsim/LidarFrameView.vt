// Copyright (C) 1991-2011 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "05/21/2017 17:14:28"
                                                                                
// Verilog Test Bench template for design : LidarFrameView
// 
// Simulation tool : ModelSim-Altera (Verilog)
// 

`timescale 1 ns/ 1 ns
module LidarFrameView_vlg_tst();
// constants                                           
// general purpose registers
reg eachvec;
// test vector input registers
reg [7:0] AD_data;
reg clk;
reg rst_n;
reg startPoint;
// wires                                               
wire AD_OE;
wire AD_clk;
wire CCD_M0;
wire CCD_M1;
wire CCD_RM;
wire CCD_clk;
wire CCD_data;
wire CCD_rst;
wire CCD_sht;
wire rs232_tx;


parameter CLK_PERIOD = 20;  //CLK_PERIOD=40ns, Frequency=25MHz
 
initial
	clk = 1'b0;
always
	clk = #(CLK_PERIOD/2) ~clk;
                                                   
initial 
	begin
		rst_n = 1'b0;
		startPoint = 1'b0;
		#100;
		rst_n = 1'b1;
		#200
		startPoint = 1'b1;
		#100
		startPoint = 1'b0;

	end
	
initial
	AD_data = 0;
always
	AD_data = #1000 AD_data + 1;









// assign statements (if any)                          
LidarFrameView i1 (
// port map - connection between master ports and signals/registers   
	.AD_OE(AD_OE),
	.AD_clk(AD_clk),
	.AD_data(AD_data),
	.CCD_M0(CCD_M0),
	.CCD_M1(CCD_M1),
	.CCD_RM(CCD_RM),
	.CCD_clk(CCD_clk),
	.CCD_data(CCD_data),
	.CCD_rst(CCD_rst),
	.CCD_sht(CCD_sht),
	.clk(clk),
	.rs232_tx(rs232_tx),
	.rst_n(rst_n),
	.startPoint(startPoint)
);
                                                                                                 
endmodule

